@model  Emp_Demo.Models.Employeeinfo
@{
    ViewBag.Title = "EditEmployee";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}
<style>
    label.required::after {
        content: " *";
        color: red;
    }

    form-group {
        margin-top: 15px;
        margin-bottom: .5rem;
        margin-left: 0;
    }

    .container {
        width: 100% !important;
        max-width: 100% !important;
        padding-top: 1rem !important;
    }

    body {
        margin: inherit;
    }
</style>

<nav class="navbar navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
        @*<a class="navbar-brand" href="#">Employee Management System</a>*@

        <a class="navbar-brand mr-auto"> Edit Employee Information  </a>
    </div>
</nav>

@using (Html.BeginForm("EditEmployee", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">

        @Html.LabelFor(Model => Model.EmployeeName, "Employee Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.EmployeeName, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.EmployeeName, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Contact, "Contact", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Contact, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Contact, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Department, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Designation, "Designation", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Designation, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Department, "Department", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.DropDownList("Department", ViewBag.Departments as SelectList, new { @class = "form-control" })

        @Html.ValidationMessageFor(Model => Model.Department, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Userlogin.Username, "Username", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Userlogin.Username, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Userlogin.Username, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Userlogin.Password, "Password", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.TextBoxFor(model => model.Userlogin.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Userlogin.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Userlogin.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.DropDownListFor(Model => Model.Userlogin.Role, new SelectList(new List<string> { "Admin", "Employee" }), htmlAttributes: new { @class = "form-select" })
        @Html.ValidationMessageFor(Model => Model.Userlogin.Role, "", new { @class = "text-danger" })
    </div>
    <!--<div class="form-group">
        <label asp-for="NewEmployeeImage" class="control-label">Employee Image </label>
        <input asp-for="NewEmployeeImage" type="file" class="form-control" />
        <span asp-validation-for="NewEmployeeImage" class="text-danger"></span>
    </div>
    <div class="form-group">-->
        @*<img src="data:image;base64,@(Model.EmployeeImage != null ? Convert.ToBase64String(Model.EmployeeImage) : "")" alt="Employee Image" style="max-width: 200px;" />*@
    <!--</div>-->
    <button type="submit" class="btn btn-primary">Submit</button>

    <button type="button" class="btn btn-dark">
        @Html.ActionLink("Back to List", "EmployeeList", null, new { @style = "color: white;" })
    </button>







 }



